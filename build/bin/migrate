#!/bin/bash

MUSER="root"
TARGET=/service/mig

_usage()
{
  echo "  # Migration:"
  echo "  migrate export                               # export data"
  echo "  migrate import [without_wait_for_resync]     # import data with [or without] resync"
  exit 0
}
if [ "$1" = "" ] ; then 
  _usage
fi

if [ "$1" != "export" ] && [ "$1" != "import" ] ; then
  _usage
fi
#############################################################################################
# magic main
#############################################################################################

MYSQL_ROOT_PW=$(grep "clientdb_password" /usr/local/ispconfig/server/lib/mysql_clientdb.conf | awk -F\' '{ print $2 }')

if [ "$1" = "export" ] ; then

  echo "remove existing export directory <$TARGET> ..."
  rm -Rf $TARGET
  mkdir -p $TARGET
  #
  # passwd, shadow, group
  #
  echo "extract ispconfig entries from passwd, shadow and group"
  grep "^web[0-9]*:"                       /etc/passwd  > $TARGET/passwd.ispconfig
  grep "^web[0-9]*:"                       /etc/shadow  > $TARGET/shadow.ispconfig
  grep -e "^client[0-9]*:" -e "^sshusers:" /etc/group   > $TARGET/group.ispconfig
  #
  # databases
  #
  echo "ORIG_MYSQL_ROOT_PW=${MYSQL_ROOT_PW}" > $TARGET/config

  DBS="$(mysql -u $MUSER -p"${MYSQL_ROOT_PW}" -Bse 'show databases')"
  mkdir -p $TARGET/sql
  for db in $DBS ; do
    echo "exporting database <$db> ..." 
    mysqldump -u$MUSER --password="${MYSQL_ROOT_PW}" "$db" --single-transaction > "$TARGET/sql/$db.sql"
  done
  echo "migration export to <$TARGET> done."
  echo ""
  exit 0
fi

#
#
#
if [ "$1" = "import" ] ; then
  
  cd /
  supervisorctl stop cron
  supervisorctl stop apache2

  list="passwd shadow group"
  for i in $list ; do
    cp -f "/etc/${i}" "/etc/${i}.new"
    while read -r line ; do
      STRING=$(echo "$line" | cut -d":" -f1 )
      if grep -q "^${STRING}:" "/etc/${i}.new" ; then
        #echo "/etc/${i}.new replace line with <$line>"
        #sed -i 's/^"$STRING":.*/"$line"/'                        /etc/${i}.new
        sed -i "s#^${STRING}:.*#${line}#"                        "/etc/${i}.new"
      else
        #echo "/etc/${i}.new append line: <$line>" 
        echo "$line" >> "/etc/${i}.new"
      fi          
      #echo -e "<$i> :  <$line> : <$STRING>"
    done < "${TARGET}/${i}.ispconfig"
    echo "#######################################################"
    echo "# diff between </etc/${i}.new> </etc/${i}> :"
    diff "/etc/${i}.new" "/etc/${i}"
    ret=$?
    if [ "$ret" = "1" ] ; then
      cp -v "/etc/${i}.new" "/etc/${i}"
    fi
  done
  echo "#######################################################"
 
  MYSQL_ROOT_PW=$(grep "clientdb_password" /usr/local/ispconfig/server/lib/mysql_clientdb.conf | awk -F\' '{ print $2 }')

  list=$(ls -d -1 $TARGET/sql/*)
  for i in $list ; do
    db=$(basename "$i")
    db=${db%.sql}
    if [ "$db" != "mysql" ] && [ "$db" != "information_schema" ] && [ "$db" != "performance_schema" ] && [ "$db" !=  "phpmyadmin" ] ; then
      echo "restoring database <$db> from <$i> ..."
      echo "CREATE DATABASE IF NOT EXISTS $db ; " |  mysql -u $MUSER -p"${MYSQL_ROOT_PW}"
      mysql -u $MUSER -p"${MYSQL_ROOT_PW}" "$db" < "${i}"
    fi    
  done
  # shellcheck source=/dev/null
  source "${TARGET}/config"
  echo "change mysql root password to ${ORIG_MYSQL_ROOT_PW}"
  mysqladmin -uroot -p"${MYSQL_ROOT_PW}" password "${ORIG_MYSQL_ROOT_PW}"
  FI=/usr/local/ispconfig/server/lib/mysql_clientdb.conf
  sed -i -e "/clientdb_password/ s/${MYSQL_ROOT_PW}/${ORIG_MYSQL_ROOT_PW}/" $FI
  supervisorctl start apache2
  supervisorctl start cron

  #echo "set password for ispconfig in mysql database like in /usr/local/ispconfig/interface/lib/config.inc.php"
  #PW_INC=$(grep "^\$conf\['db_password'\]"  /usr/local/ispconfig/interface/lib/config.inc.php | cut -d\' -f4)
  #echo "  password in config.inc.php : <$PW_INC>"
  #echo "update user set Password = PASSWORD(\"${PW_INC}\") WHERE User = 'ispconfig';" | mysql -u $MUSER -p${MYSQL_ROOT_PW} mysql

  if [ "$2" != "without_wait_for_resync" ] ; then
    /usr/local/bin/wait_for_resync.sh
  fi

  echo "migration import from <$TARGET> done."
  
fi




 
