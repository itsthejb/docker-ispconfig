#!/bin/bash -xe

trap "echo Exited!; exit;" SIGINT SIGTERM
if command -v gsed; then SED="gsed"; else SED="sed"; fi

function buildAndTest() {
  YML=$1
  ARG=$2
  CMD="docker-compose -f test/$YML build $ARG"
  if ! $CMD; then
    echo "Failed: \"$CMD\""
    exit 1
  fi

  DOWN="docker-compose -f test/$YML down -v"
  CMD="docker-compose -f test/$YML up --no-build --abort-on-container-exit --force-recreate --remove-orphans sut"
  if ! $CMD; then
    echo "Failed: \"$CMD\""
    $DOWN &> /dev/null || true
    exit 1
  fi
  $DOWN &> /dev/null || true
}

function testNormal() {
  buildAndTest docker-compose.bats.test.yml
  buildAndTest docker-compose.bats.custom-ssl.test.yml
  buildAndTest docker-compose.bats.reconfigure.test.yml
  buildAndTest docker-compose.puppeteer.test.yml
  buildAndTest docker-compose.puppeteer.no-phpmyadmin.test.yml
}

function testLiveDB() {
  function databaseUp() {
    docker-compose -f "test/$1" up -d -V --force-recreate --remove-orphans mariadb
  }
  function databaseDown() {
    docker stop mariadb
    docker rm mariadb
  }

  databaseUp "$1"
  buildAndTest "$1" --no-cache
  databaseDown "$1"
}

testNormal
testLiveDB "docker-compose.puppeteer.remote-db.test.yml"
testLiveDB "docker-compose.puppeteer.remote-db-seeded.test.yml"
